#ifndef SOUNDIO_HPP
#define SOUNDIO_HPP

#include <memory>
#include "spdlog/spdlog.h"

#include <soundio/soundio.h>

#include "codec.hpp"

// TODO put this in an autogenerated header from cmake
#define APP_NAME "FretStorm"

#define DEFAULT_SOUNDIO_LATENCY (0.1)

namespace FScore {
    std::shared_ptr<spdlog::logger> m_logger;

    // To call at the start of the app. Initializes *soundio.
    // @return 0 if correctly initialized, 1 if there was an error.
    int soundio_initialize();
    int soundio_quit();

    // To call at the start of the app. Initializes *device.
    // @return 0 if correctly initialized, 1 if there was an error.
    int soundio_connect_default_output_device();
    int soundio_disconnect_device();

    class SoundIoOStream {
    public:
        SoundIoOStream() {
            m_logger = spdlog::get("default");
        };
        ~SoundIoOStream(){
            close();
        };

        int setInput(Codec *thesong);

        int open(SoundIoFormat format, int sample_rate, double latency);
        int open(SoundIoFormat format, int sample_rate)
        { return open(format, sample_rate, DEFAULT_SOUNDIO_LATENCY); }
        int open(double latency);

        void close();


    protected:
        Codec* theSong;
        struct SoundIoOutStream *outstream;

        static void write_callback_static(
            struct SoundIoOutStream *outstream,
            int frame_count_min, int frame_count_max);
        void write_callback(
            struct SoundIoOutStream *outstream,
            int frame_count_min, int frame_count_max);

        static void underflow_callback_static(
            struct SoundIoOutStream *outstream);
        void underflow_callback(
            struct SoundIoOutStream *outstream);



    };

    // A test function
    int soundio_main(Codec *thesong);

} // Namespace FSore

#endif // SOUNDIO_HPP
